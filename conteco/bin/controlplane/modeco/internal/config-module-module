#!/usr/bin/env bash
rootPath=$1
basePath="$rootPath/modeco"


# for modules:
# - iterate over package folders
# - create package instances / rename using instance names
# - compile the module settings from the packages settings

	executionplane-error "No implementation for modules yet."

#	destination="${basePath}/packages/${CONTECO_NAME}"
#	source="/conteco/docker-compose"

	# ITERATE OVER THE PACKAGE FOLDERS
#	for f in $selector ;
#	do
#		noSelection="false"
#		.invoke $1 ${@:2:$#-2} $f > >( output-parser-tagged ) 2> >( output-parser-tagged );
#		wait-for-output-parser-tagged
#	done;
	# FIRST STACK NAME IS ORIGINAL PACKAGE NAME
	# COPY ALL .conteco RESOURCES FROM PACKAGE IMAGE TO MODULE imageName

#settingsBase="$CONTECO_DC_GLOBAL_STACKNAMES_BASE"
#templateBase=$(grep CONTECO_DC_GLOBAL_STACKNAMES_BASE $basePath/settings.template | cut -d'"' -f 2)
#templateBaseList=$(grep CONTECO_DC_GLOBAL_BASE_LIST= $basePath/settings.template | cut -d'"' -f 2)
#globalStackNames=
#if [[ "$settingsBase," != "" && "$settingsBase," != "$templateBase,"* && "$templateBase," != "$settingsBase,"* ]] ; then
#	executionplane-error "CONFIGURATION ERROR: settings STACKNAMES_BASE must be prefix of template STACKNAMES_BASE or vice-versa."
#	exit 1;
#fi
#rm $basePath/stacks/*.yml
#IFS=',' read -r -a stacks <<< "$templateBase"
#IFS=',' read -r -a stackNames <<< "${CONTECO_DC_GLOBAL_STACKNAMES}"
#for stackNumber in ${!stacks[@]};
#do
#	stack=${stacks[stackNumber]}
#	stackName=${stackNames[stackNumber]}
#	if [[ $stackName == "" ]] ; then
#		stackName=${stacks[stackNumber]}
#	fi
#	export CONTECO_STACKPREFIX="${CONTECO_TYPE}_$stackName"
#	source=$basePath/stacks/$stack.docker-compose.yml.template
#	destination=$basePath/stacks/$stackName.docker-compose.yml
#	cat $source | envsubst '${CONTECO_TYPE} ${CONTECO_STACKPREFIX} ${CONTECO_NETWORKLOCAL} ${CONTECO_NETWORKGLOBAL} ' | sed "s/CONTECO_DC_${stack^^}_/${stackName^^}_/g" > $destination
#	grep CONTECO_DC_${stack^^}_ $basePath/settings.template |  sed "s/CONTECO_DC_${stack^^}_/${stackName^^}_/g" >> $basePath/settings.base.original
#	globalStackNames="$globalStackNames$stackName,"
#done;
