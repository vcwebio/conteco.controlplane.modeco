#!/usr/bin/env bash
(
rootPath=$1
basePath="$rootPath/modeco"
. $basePath/settings
mkdir $basePath/import
chmod -R 777 $basePath/import
rm $basePath/stacks/*.yml.template
IFS=',' read -r -a moduleBases <<< "${CONTECO_DC_GLOBAL_BASE_LIST}"
previousBase=
previousBaseConfiguration=
for base in ${moduleBases[@]};
do
	if [[ "$base" != "$previousBase" ]] ; then
		imageName=${CONTECO_REALM}/conteco.$base
		. executionplane-capture-output docker create $imageName
		executionplane docker container cp $CONTECO_EXECUTIONPLANE_OUTPUT:/conteco/docker-compose/. $basePath/import
		chmod -R 777 $basePath/import
		previousBaseConfiguration=$(sed -n "/# START CONFIGURATION/,/# END CONFIGURATION/p" $basePath/import/environment)
		imageStackNames=$(grep CONTECO_DC_GLOBAL_STACKNAMES= $basePath/import/environment | cut -d'"' -f 2 | tr '\n' ',' | sed 's/.$//')
		IFS=',' read -r -a imageStacks <<< "${imageStackNames}"
		chmod -R 777 $basePath/import/environment.module
		cat $basePath/import/environment.module >> $basePath/settings.template.original
		for imageStack in ${imageStacks[@]};
		do
			source="$basePath/import/stacks/$imageStack.docker-compose.yml"
			chmod -R 777 $source
			cp $source $basePath/stacks/${imageStack}.docker-compose.yml.template
		done;
		rm -r $basePath/import/*
		previousBase="$base"
	else
		echo "$previousBaseConfiguration" >> $basePath/settings.template.original
	fi
done;
rm -r $basePath/import

# extract aggregated STACKNAMES, BOOTSTACKS, RUNSTACKS and VOLUMELIST
globalStackNames=$(grep CONTECO_DC_GLOBAL_STACKNAMES= $basePath/settings.template.original | cut -d'"' -f 2 | tr '\n' ',' | sed 's/.$//')
globalBootStacks=$(grep CONTECO_DC_GLOBAL_BOOTSTACKS= $basePath/settings.template.original | cut -d'"' -f 2 | tr '\n' ',' | sed 's/.$//')
globalRunStacks=$(grep CONTECO_DC_GLOBAL_RUNSTACKS= $basePath/settings.template.original | cut -d'"' -f 2 | tr '\n' ',' | sed 's/.$//')
globalVolumeList=$(grep CONTECO_DC_GLOBAL_VOLUME_LIST= $basePath/settings.template.original | cut -d'"' -f 2 | tr '\n' ',' | sed 's/.$//')

# CONFIGURATION block
DOLLAR="$"
echo $'#!/usr/bin/env bash\n\n# START CONFIGURATION' > $basePath/settings.template
echo "export CONTECO_DC_GLOBAL_BASE_LIST=\"$CONTECO_DC_GLOBAL_BASE_LIST\"
export CONTECO_DC_GLOBAL_STACKNAMES_BASE=\"$globalStackNames\"
export CONTECO_DC_GLOBAL_STACKNAMES=\"$globalStackNames\"
export CONTECO_DC_GLOBAL_BOOTSTACKS=\"$globalBootStacks\"
export CONTECO_DC_GLOBAL_RUNSTACKS=\"$globalRunStacks\"
export CONTECO_DC_GLOBAL_VOLUME_LIST=\"$globalVolumeList\"
export CONTECO_DC_GLOBAL_VOLUME_INITIALISED=\"\"
# END CONFIGURATION
" >> $basePath/settings.template

# OTHER VARIABLES block
otherVariables=$(grep export $basePath/settings.template.original | grep -v _GLOBAL | grep -v _PORTS | grep -v _DEPLOY | grep -v _NETWORKS | grep -v _VOLUMES)
echo "# START OTHER VARIABLES" >> $basePath/settings.template
if [[ "$otherVariables" != "" ]] ; then
	printf "%s\n" "$otherVariables" >> $basePath/settings.template
fi
echo "# END OTHER VARIABLES
" >> $basePath/settings.template

# VOLUMES block
volumes=$(grep _VOLUMES $basePath/settings.template.original | grep -v _GLOBAL)
echo "# START VOLUMES VARIABLES" >> $basePath/settings.template
if [[ "$volumes" != "" ]] ; then
	printf "%s\n" "$volumes" >> $basePath/settings.template
	globalVolumes=
	IFS=',' read -r -a volumes <<< "${globalVolumeList}"
	for volume in ${volumes[@]};
	do
		globalVolumes="$globalVolumes${DOLLAR}{CONTECO_TYPE}_$volume: { external: true },"
	done;
	echo "export CONTECO_DC_GLOBAL_VOLUMES=\"$(echo $globalVolumes | sed 's/.$//')\"" >> $basePath/settings.template
fi
echo "# END VOLUMES VARIABLES
" >> $basePath/settings.template

# PORTS block
ports=$(grep _PORTS $basePath/settings.template.original)
echo "# START PORTS VARIABLES" >> $basePath/settings.template
if [[ "$ports" != "" ]] ; then
	printf "%s\n" "$ports" >> $basePath/settings.template
fi
echo "# END PORTS VARIABLES
" >> $basePath/settings.template

# NETWORKS block
networks=$(grep _NETWORKS $basePath/settings.template.original | grep -v _GLOBAL)
echo "# START NETWORKS VARIABLES" >> $basePath/settings.template
if [[ "$networks" != "" ]] ; then
	printf "%s\n" "$networks" >> $basePath/settings.template
	echo "export CONTECO_DC_GLOBAL_NETWORKS=\"modeco_overlay: { external: true },${DOLLAR}{CONTECO_TYPE}_overlay: { external: true }\"" >> $basePath/settings.template
fi
echo "# END NETWORKS VARIABLES
" >> $basePath/settings.template

deploy=$(grep _DEPLOY $basePath/settings.template.original)
echo "# START DEPLOY VARIABLES" >> $basePath/settings.template
if [[ "$deploy" != "" ]] ; then
	printf "%s\n" "$deploy" >> $basePath/settings.template
fi
echo "# END DEPLOY VARIABLES" >> $basePath/settings.template

rm $basePath/settings.template.original
)
