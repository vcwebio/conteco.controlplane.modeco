#!/usr/bin/env bash
(
rootPath=$1
basePath="$rootPath/modeco"
. $basePath/settings

export CONTECO_STACKPREFIX="${CONTECO_TYPE}_${CONTECO_NAME}"
export CONTECO_NETWORKLOCAL="${CONTECO_TYPE}"
export CONTECO_NETWORKGLOBAL="${CONTECO_REALM_RUNTIME}"

if [[ "$CONTECO_TYPE" == "package" ]] ; then

	# for packages, simple apply appropriate environment variables on .conteco files
	# package settings become module settings with PACKAGE_CONTECO removed
	folderPath="${basePath}/packages/${CONTECO_NAME}"
	source="$folderPath/settings.conteco"
	destination="$folderPath/settings"
	cat $source | envsubst '${CONTECO_STACKPREFIX} ${CONTECO_NETWORKLOCAL} ${CONTECO_NETWORKGLOBAL}' | sed "s/# START CONFIGURATION/# START CONFIGURATION\\nexport CONTECO_DC_GLOBAL_STACKS=\"$CONTECO_NAME\"/g" | sed "s/# END CONFIGURATION/export CONTECO_DC_GLOBAL_VOLUME_INITIALISED=\"\"\\n# END CONFIGURATION/g" > $destination
	cp $destination ${basePath}/settings.module
	sed -i '/export CONTECO_DC_GLOBAL_PACKAGE_CONTECO=/d' ${basePath}/settings.module
	rm $folderPath/*.docker-compose.yml ;
	for f in $folderPath/*.docker-compose.yml.conteco ;
	do
		destination="$(echo $f | sed "s/yml.conteco/yml/g" )"
		cat $f | envsubst '${CONTECO_TYPE} ${CONTECO_STACKPREFIX} ${CONTECO_NETWORKLOCAL} ${CONTECO_NETWORKGLOBAL}' > $destination
	done;

else

	# module configuration
	. config-module-module $rootPath

fi

# create the deploy-local script
. config-module-deploy-local $rootPath
)
